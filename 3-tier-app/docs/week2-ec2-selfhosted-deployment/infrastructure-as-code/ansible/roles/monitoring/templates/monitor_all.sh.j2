#!/bin/bash
# Comprehensive monitoring script for {{ app.name }}
# Generated by Ansible on {{ ansible_date_time.iso8601 }}

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}╔══════════════════════════════════════════════════════════════╗${NC}"
echo -e "${BLUE}║                    {{ app.name | upper }} MONITORING DASHBOARD                 ║${NC}"
echo -e "${BLUE}╚══════════════════════════════════════════════════════════════╝${NC}"
echo
echo -e "${YELLOW}Server:${NC} {{ inventory_hostname }} ({{ ansible_host }})"
echo -e "${YELLOW}Timestamp:${NC} $(date)"
echo -e "${YELLOW}Uptime:${NC} $(uptime -p)"
echo

# System Health
echo -e "${BLUE}=== SYSTEM HEALTH ===${NC}"
LOAD=$(uptime | awk -F'load average:' '{print $2}' | awk '{print $1}' | sed 's/,//')
MEMORY=$(free | grep Mem | awk '{printf "%.1f", $3/$2 * 100.0}')
DISK=$(df / | tail -1 | awk '{print $5}' | sed 's/%//')

echo -e "CPU Load: ${LOAD}"
echo -e "Memory Usage: ${MEMORY}%"
echo -e "Disk Usage: ${DISK}%"

# Service Status
echo
echo -e "${BLUE}=== SERVICE STATUS ===${NC}"

# Check MySQL
if systemctl is-active --quiet mysql; then
    echo -e "MySQL: ${GREEN}✅ Running${NC}"
else
    echo -e "MySQL: ${RED}❌ Stopped${NC}"
fi

# Check Nginx
if systemctl is-active --quiet nginx; then
    echo -e "Nginx: ${GREEN}✅ Running${NC}"
else
    echo -e "Nginx: ${RED}❌ Stopped${NC}"
fi

# Check PM2
PM2_STATUS=$(su {{ app.user }} -c "pm2 jlist" 2>/dev/null | jq -r '.[0].pm2_env.status' 2>/dev/null)
if [ "$PM2_STATUS" = "online" ]; then
    echo -e "PM2 API: ${GREEN}✅ Online${NC}"
else
    echo -e "PM2 API: ${RED}❌ Offline${NC}"
fi

# Application Health
echo
echo -e "${BLUE}=== APPLICATION HEALTH ===${NC}"

# Test main page
MAIN_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/ 2>/dev/null)
if [ "$MAIN_STATUS" = "200" ]; then
    echo -e "Main Page: ${GREEN}✅ OK (HTTP $MAIN_STATUS)${NC}"
else
    echo -e "Main Page: ${RED}❌ Failed (HTTP $MAIN_STATUS)${NC}"
fi

# Test admin panel
ADMIN_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/admin.html 2>/dev/null)
if [ "$ADMIN_STATUS" = "200" ]; then
    echo -e "Admin Panel: ${GREEN}✅ OK (HTTP $ADMIN_STATUS)${NC}"
else
    echo -e "Admin Panel: ${RED}❌ Failed (HTTP $ADMIN_STATUS)${NC}"
fi

# Test API
API_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost/api/submissions 2>/dev/null)
if [ "$API_STATUS" = "200" ]; then
    echo -e "API Endpoint: ${GREEN}✅ OK (HTTP $API_STATUS)${NC}"
else
    echo -e "API Endpoint: ${RED}❌ Failed (HTTP $API_STATUS)${NC}"
fi

# Database connectivity
DB_STATUS=$(mysql -u {{ database.user }} -p{{ database.password }} -h {{ database.host }} -e "SELECT 1;" {{ database.name }} 2>/dev/null && echo "OK" || echo "FAILED")
if [ "$DB_STATUS" = "OK" ]; then
    echo -e "Database: ${GREEN}✅ Connected${NC}"
else
    echo -e "Database: ${RED}❌ Connection Failed${NC}"
fi

# Recent Activity
echo
echo -e "${BLUE}=== RECENT ACTIVITY ===${NC}"
echo "Recent API requests (last 5):"
tail -5 {{ nginx.access_log }} 2>/dev/null | grep -E "(GET|POST)" | tail -5 || echo "No recent requests"

echo
echo "Recent application logs (last 3):"
tail -3 {{ app.logs_dir }}/{{ pm2.app_name }}.log 2>/dev/null || echo "No recent logs"

# Quick Actions
echo
echo -e "${BLUE}=== QUICK ACTIONS ===${NC}"
echo "Restart API:     pm2 restart {{ pm2.app_name }}"
echo "View API logs:   pm2 logs {{ pm2.app_name }}"
echo "Restart Nginx:   sudo systemctl restart nginx"
echo "Check MySQL:     sudo systemctl status mysql"
echo "Full monitoring: {{ app.app_dir }}/scripts/monitor_all.sh"

echo
echo -e "${BLUE}=== MONITORING COMPLETE ===${NC}"
